<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java变量的分类与自动类型转换]]></title>
    <url>%2F2019%2F03%2F26%2FJava%E5%8F%98%E9%87%8F%E7%9A%84%E5%88%86%E7%B1%BB%E4%B8%8E%E8%87%AA%E5%8A%A8%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[Java变量的分类与自动类型转换变量的分类 类型 声明位置 从属于 生命周期 局部变量 方法或者语句块内 方法/语句块 从声明位置开始，直到方法或语句块执行完毕，局部变量消失 成员变量（实例变量） 类内部，方法外部 对象 对象创建，成员变量也跟着创建。对象消失，成员变量也跟着消失； 静态变量（类变量） 类内部（不能定义在方法或者语句块中），static修饰 类 类被加载，静态变量就有效；类被卸载，静态变量就消失 局部变量（local variable）方法或语句块内部定义的变量。生命周期是从声明位置开始到到方法或语句块执行完毕为止。局部变量在使用前必须先声明、初始化(赋初值)再使用。 成员变量（也叫实例变量 member variable）方法外部、类的内部定义的变量。从属于对象，生命周期伴随对象始终。如果不自行初始化，它会自动初始化成该类型的默认初始值。 数据类型 默认初始值 int 0 double 0.0 char ‘\u0000’ boolean false 静态变量（类变量 static variable） 使用static定义。 从属于类，生命周期伴随类始终，从类加载到卸载。 如果不自行初始化，与成员变量相同会自动初始化成该类型的默认初始值，如上表所示。 123456789101112public class TestVariable&#123; int a;//成员变量，从属于对象；成员变量会自动被初始化 static int size; //静态变量，从属于类 public static void main(String[] args) &#123; &#123; int age=18;//局部变量，从属于语句块 &#125; int salary=3000;//局部变量，从属于方法 int i;//局部变量，必须初始化 int j=i+5;//编译出错，变量i还未被初始化 &#125;&#125; 自动类型转换 数据范围小的数据与数据范围大的数据进行数学计算时，自动向大范围的数据类型转换后计算。（例如int和long计算，则int类型先自动变为long类型，再计算） 常量也有类型，常整数为int，常浮点数为double 12long a = 55555555; //编译成功，在int表示的范围内(2.1e9内)。long b = 55555555555;//不加L编译错误，已经超过int表示的范围。 我们修改成long类型的常量即可 1long b = 55555555555L; 注意事项 byte,short,char参与运算的时候默认会转换成int类型，即使是统一数据类型相加也会转成int型 123456public static void main(String[] args) &#123; byte b=10; byte c=10; byte d=b+c;//此处报错，Type mismatch: cannot convert from int to byte，b+c时候，自动转换成int类型 short s=b;//此处没问题&#125;]]></content>
      <categories>
        <category>JavaSE</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JavaSE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java命名规范]]></title>
    <url>%2F2019%2F03%2F26%2FJava%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83%2F</url>
    <content type="text"><![CDATA[Java命名规范只是建议 类和接口名称：每一个单词首字母大写，例如：TestDemo; 变量/方法名称：第一个单词首字母小写，之后每个单词的首字母大写，例如：studentName;printInfo();【驼峰原则】 常量名称：每个字母大写,若有多个单词，以_分割，例如：FLAG，MAX_VALUE; 包名称：所有字母小写 ​ 多级包： 域名反转，例如：www.zju.edu.cn –&gt; cn.edu.zju]]></content>
      <categories>
        <category>JavaSE</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JavaSE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Typora快速编辑Markdown]]></title>
    <url>%2F2019%2F03%2F23%2F%E4%BD%BF%E7%94%A8Typora%E5%BF%AB%E9%80%9F%E7%BC%96%E8%BE%91Markdown%2F</url>
    <content type="text"><![CDATA[标题标题是用“#”实现的，标题前面加一个“#”，代表一级标题；依次类推，标题前面加六个“#”代表六级标题；一共有六级标题，编辑各种文档完全够用。 #+空格+标题内容 下划线快捷键Ctrl+u，即可实现下划线功能。 强调内容的前后分别加两个*号 斜体内容前后分别加一个\号* 斜体加粗*前后加3个** 删除线先转化成英文输入法，再把内容前后分别加上两个~号 特别注意是2个~ 列表有序列表输入数字“1”+“.”+”空格”，自动开始有序列表。 步骤1 步骤2 步骤3 无序列表输入“+”或者“-”或者“*”+空格，自动开始无序列表 步骤1 步骤2 步骤3 tableCtrl+T,在弹出的对话框中选择行列数，自动生成列表。还可以很方便地对表格进行编辑。 学号 姓名 成绩 xxx xxx xxx asd 分割线有时候，为了排版漂亮，可能会加入分隔线。Markdown加入分隔线非常简单，使用下面任意一种形式都可以 12***--- 插入图片插入本地图片设置主题_config.ymlpost_asset_folder: true当资源文件管理功能打开后，Hexo将会在你每一次通过hexo new post &lt;title&gt;命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个markdown文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹之中，你可以通过相对路径来引用它们，这样你就得到了一个简单而且方便很多的工作流。123&#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125; 例如本例中，将ZJU.jpg放到资源文件夹中。通过 1&#123;% asset_img ZJU.jpg 测试%&#125; 命令插入，其中[title]可省略 插入代码`System.out.println(“Hello World!”);`System.out.println(&quot;Hello World!&quot;);```System.out.println(“Hello Hexo”);System.out.println(“Hello World!”);``` 12System.out.println("Hello Hexo");System.out.println("Hello World!"); 行内代码引用，使用单个反引号进行包裹（Tab上面那个），代码块用三个反引号包裹。]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Markdown 编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用hexo写博客攻略]]></title>
    <url>%2F2019%2F03%2F22%2F%E4%BD%BF%E7%94%A8hexo%E5%86%99%E5%8D%9A%E5%AE%A2%E6%94%BB%E7%95%A5%2F</url>
    <content type="text"><![CDATA[新建文章在站点的根目录下执行以下命令：(本博客站点根目录为D:\blog\WJJ711)$ hexo new post &lt;title&gt;//此处title不需要加双引号例如$ hexo new post 使用hexo写攻略可以简写为$ hexo n &lt;title&gt;例如$ hexo n 使用hexo写攻略 给文章添加分类，标签 1 使用Subline Text 打开《使用hexo写博客攻略》 2 设置如下：12345678---title: 使用hexo写博客攻略date: 2019-03-22 19:34:50tags: - hexo - Markdown 编辑器categories: hexo--- 注意 - 后面的空格！ 3 博客正文需要在---下面撰写 一级标题使用一个#+空格+内容 二级标题使用2个#+空格+内容 三级标题使用3个#+空格+内容 设置列表Markdown支持有序列表和无序列表两种形式：无序列表用*或+或-标识有序列表用数字加.标识，例如1. 列表1 列表2 a 子列表1 b 子列表2 列表312345- 列表1- 列表2 a 子列表1 b 子列表2- 列表3 注意- 后面的空格 添加网站链接B站导航[B站导航](https://www.bilibili.com/)注意：https://不能少 插入图片插入本地图片设置主题_config.ymlpost_asset_folder: true当资源文件管理功能打开后，Hexo将会在你每一次通过hexo new post &lt;title&gt;命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个markdown文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹之中，你可以通过相对路径来引用它们，这样你就得到了一个简单而且方便很多的工作流。 123&#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125; 例如本例中，将ZJU.jpg放到资源文件夹中。通过1&#123;% asset_img ZJU.jpg 测试%&#125; 命令插入，其中[title]可省略注意，此处必须用```加换行的方式插入上面代码 制表语法如下：123表头|条目一|条目二:---:|:---:|:---:项目|项目一|项目二 以上标记效果显示如下： 表头 条目一 条目二 项目 项目一 项目二 语法说明 |、-、:之间多余的空格会被忽略，不影响布局。 三个短斜杠左右的冒号用于控制对齐方式，只放置左边冒号表示文字居左，只放置右边冒号表示文字居右，如果两边都放置冒号表示文字居中。 表格的语句上一行必须为空行，不然表格不生效 强调有时候，我们希望对某一部分文字进行强调，使用*或_包裹即可。使用单一符号标记的效果是斜体，使用两个符号标记的效果是加粗12345*这里是斜体*_这里是斜体_**这里是加粗**__这里是加粗__ 这里是斜体这里是斜体 这里是加粗这里是加粗 分割线有时候，为了排版漂亮，可能会加入分隔线。Markdown加入分隔线非常简单，使用下面任意一种形式都可以 12***--- 插入代码`System.out.println(“Hello World!”);`System.out.println(&quot;Hello World!&quot;);```System.out.println(“Hello Hexo”);System.out.println(“Hello World!”);```12System.out.println(&quot;Hello Hexo&quot;);System.out.println(&quot;Hello World!&quot;); 行内代码引用，使用单个反引号进行包裹（Tab上面那个），代码块用三个反引号包裹。 使用反斜杠\插入语法中用到的特殊符号在Markdown中，主要有以下几种特殊符号需要处理：123456789101112\ 反斜线` 反引号* 星号_ 底线&#123;&#125; 花括号[] 方括号() 括弧# 井字号+ 加号- 减号. 英文句点! 惊叹号 例如要输出```需要1\`\`\`]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Markdown 编辑器</tag>
      </tags>
  </entry>
</search>
